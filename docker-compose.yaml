version: "3"
services:

  nginx:
    image: nginx
    container_name: nginx-laravel
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    ports:
      - 8000:80
    networks:
      backend:

  mysql:
    image: mysql
    container_name: mysql-laravel
    restart: unless-stopped
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: laravel_docker
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456
    ports:
      - 3306:3306
    networks:
      backend:


  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin-laravel
    restart: unless-stopped
    environment:
      PMA_HOST: mysql-laravel
    ports:
      - 8080:80
    depends_on:
      - mysql
    networks:
      backend:


  php:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php-laravel
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
    ports:
      - 9000:9000
    networks:
      backend:


  composer:
    image: composer
    container_name: composer-laravel
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    networks:
      backend:


  artisan:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: artisan-laravel
    restart: unless-stopped
    working_dir: /var/www/html
    entrypoint: [ 'php','/var/www/html/artisan' ]
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    networks:
      backend:


  redis:
    image: redis:alpine
    container_name: redis-laravel
    command: redis-server --appendonly yes
    volumes:
      - ./redis:/data
    ports:
      - 6379:6379
    networks:
      backend:


  npm:
    image: node:13.7
    container_name: node-laravel
    restart: unless-stopped
    entrypoint: [ 'npm' ]
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      backend:

#  master:
#    image: locustio/locust
#    container_name: locust-master-laravel
#    ports:
#      - 8089:8089
#    volumes:
#      - ./locust:/mnt/locust
#    command: -f /mnt/locust/locustfile.py --master -H http://master:8089
#
#  worker:
#    image: locustio/locust
#    container_name: locust-worker-laravel
#    volumes:
#      - ./locust:/mnt/locust
#    command: -f /mnt/locust/locustfile.py --worker --master-host master


networks:
  backend: